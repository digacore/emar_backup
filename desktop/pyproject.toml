[tool.poetry]
name = "emar"
version = "1.0.117.329626"
description = "Emar runner"
authors = ["Kostia <saintkos117@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "~3.12"
loguru = "^0.7.2"
paramiko = "^3.3.1"
python-dotenv = "^1.0.0"
requests = "^2.31.0"
pyzipper = "^0.3.6"
pyinstaller = "^6.3.0"
pydantic = "^2.5.2"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.7"
mypy = "^1.7.1"
pytest = "^7.4.3"
ipython = "^8.18.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
plugins = ["pydantic.mypy"]
files = ["app/**/*.py"]
ignore_missing_imports = true
check_untyped_defs = true


[tool.ruff]
# Set the maximum line length to 120.
line-length = 120
extend-include = ["*.ipynb"]

exclude = [
    ".git",
    ".git-rewrite",
    ".mypy_cache",
    ".pytype",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "build",
    "dist",
    "node_modules",
]
# Assume Python 3.12
target-version = "py312"


[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
filterwarnings = [
    "ignore:.*cgi.*:DeprecationWarning",
    'ignore:.*werkzeug\.urls\.url.*:DeprecationWarning',
    'ignore:.*flask\.Markup.*:DeprecationWarning',
]
testpaths = ["tests"]
